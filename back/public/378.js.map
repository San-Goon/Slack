{"version":3,"file":"378.js","mappings":"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","sources":["webpack://front/./components/Modal/styles.tsx","webpack://front/./components/Modal/index.tsx","webpack://front/./hooks/useSocket.ts","webpack://front/./layouts/Workspace/styles.tsx","webpack://front/./components/Menu/styles.tsx","webpack://front/./components/Menu/index.tsx","webpack://front/./components/CreateChannelModal/index.tsx","webpack://front/./components/InviteWorkspaceModal/index.tsx","webpack://front/./components/EachDM/index.tsx","webpack://front/./components/DMList/style.tsx","webpack://front/./components/DMList/index.tsx","webpack://front/./components/EachChannel/index.tsx","webpack://front/./components/ChannelList/index.tsx","webpack://front/./layouts/Workspace/index.tsx","webpack://front/./utils/config.ts"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CreateModal = styled.div`\r\n  position: fixed;\r\n  text-align: center;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 1022;\r\n\r\n  & > div {\r\n    margin-top: 200px;\r\n    display: inline-block;\r\n    width: 440px;\r\n    background: white;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    max-width: 440px;\r\n    padding: 30px 40px 0;\r\n    z-index: 1012;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { CloseModalButton, CreateModal } from './styles';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n}\r\n\r\nconst Modal: FC<Props> = ({ show, children, onCloseModal }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <CreateModal onClick={onCloseModal}>\r\n      <div onClick={stopPropagation}>\r\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\r\n        {children}\r\n      </div>\r\n    </CreateModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import io from 'socket.io-client';\r\nimport { useCallback } from 'react';\r\nimport { backUrl } from '@utils/config';\r\n\r\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\r\n\r\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\r\n  const disconnect = useCallback(() => {\r\n    if (workspace) {\r\n      sockets[workspace].disconnect();\r\n      delete sockets[workspace];\r\n    }\r\n  }, []);\r\n\r\n  if (!workspace) {\r\n    return [undefined, disconnect];\r\n  }\r\n\r\n  if (!sockets[workspace]) {\r\n    sockets[workspace] = io.connect(`${backUrl}/ws-${workspace}`, { transports: ['websocket'] });\r\n  }\r\n\r\n  return [sockets[workspace], disconnect];\r\n};\r\n\r\nexport default useSocket;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const RightMenu = styled.div`\r\n  float: right;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 38px;\r\n  background: #350d36;\r\n  color: #ffffff;\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ProfileImg = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 16px;\r\n`;\r\n\r\nexport const ProfileModal = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  & img {\r\n    display: flex;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n  & #profile-name {\r\n    font-weight: bold;\r\n    display: inline-flex;\r\n  }\r\n  & #profile-active {\r\n    font-size: 13px;\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nexport const LogOutButton = styled.button`\r\n  border: none;\r\n  width: 100%;\r\n  border-top: 1px solid rgb(29, 28, 29);\r\n  background: transparent;\r\n  display: block;\r\n  height: 33px;\r\n  padding: 5px 20px 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Workspaces = styled.div`\r\n  width: 65px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #3f0e40;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-right: 1px solid rgb(82, 38, 83);\r\n  vertical-align: top;\r\n  text-align: center;\r\n  padding: 15px 0 0;\r\n`;\r\n\r\nexport const Channels = styled.nav`\r\n  width: 260px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  background: #3f0e40;\r\n  color: rgb(188, 171, 188);\r\n  vertical-align: top;\r\n  & a {\r\n    padding-left: 36px;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    &.selected {\r\n      color: white;\r\n    }\r\n  }\r\n  & .bold {\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n  & .count {\r\n    margin-left: auto;\r\n    background: #cd2553;\r\n    border-radius: 16px;\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    height: 18px;\r\n    line-height: 18px;\r\n    padding: 0 9px;\r\n    color: white;\r\n    margin-right: 16px;\r\n  }\r\n  & h2 {\r\n    height: 36px;\r\n    line-height: 36px;\r\n    margin: 0;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const WorkspaceName = styled.button`\r\n  height: 64px;\r\n  line-height: 64px;\r\n  border: none;\r\n  width: 100%;\r\n  text-align: left;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-bottom: 1px solid rgb(82, 38, 83);\r\n  font-weight: 900;\r\n  font-size: 24px;\r\n  background: transparent;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding: 0;\r\n  padding-left: 16px;\r\n  margin: 0;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuScroll = styled.div`\r\n  height: calc(100vh - 102px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const WorkspaceModal = styled.div`\r\n  padding: 10px 0 0;\r\n  & h2 {\r\n    padding-left: 20px;\r\n  }\r\n  & > button {\r\n    width: 100%;\r\n    height: 28px;\r\n    padding: 4px;\r\n    border: none;\r\n    background: transparent;\r\n    border-top: 1px solid rgb(28, 29, 28);\r\n    cursor: pointer;\r\n    &:last-of-type {\r\n      border-bottom: 1px solid rgb(28, 29, 28);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Chats = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  color: white;\r\n  font-size: 24px;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceButton = styled.button`\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  background: white;\r\n  border: 3px solid #3f0e40;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: black;\r\n  cursor: pointer;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateMenu = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  & > div {\r\n    position: absolute;\r\n    display: inline-block;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    min-width: 360px;\r\n    z-index: 512;\r\n    max-height: calc(100vh - 20px);\r\n    color: rgb(29, 28, 29);\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { CSSProperties, FC, useCallback } from 'react';\r\nimport { CloseModalButton, CreateMenu } from './styles';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  style: CSSProperties;\r\n  closeButton?: boolean;\r\n}\r\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <CreateMenu onClick={onCloseModal}>\r\n      <div style={style} onClick={stopPropagation}>\r\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\r\n        {children}\r\n      </div>\r\n    </CreateMenu>\r\n  );\r\n};\r\nMenu.defaultProps = {\r\n  closeButton: true,\r\n};\r\n\r\nexport default Menu;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport { backUrl } from '@utils/config';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { useCallback, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowCreateChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\r\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n\r\n  const {\r\n    data: userData,\r\n    error,\r\n    mutate: userMutate,\r\n  } = useSWR<IUser | false>(`/api/users`, fetcher, { dedupingInterval: 2000 });\r\n  const { data: channelData, mutate: channelMutate } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n  const onCreateChannel = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      axios\r\n        .post(\r\n          `/api/workspaces/${workspace}/channels`,\r\n          {\r\n            name: newChannel,\r\n          },\r\n          { withCredentials: true },\r\n        )\r\n        .then(() => {\r\n          setShowCreateChannelModal(false);\r\n          setNewChannel('');\r\n          channelMutate();\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newChannel, workspace],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onCreateChannel}>\r\n        <Label id=\"channel-label\">\r\n          <span>채널</span>\r\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\r\n        </Label>\r\n        <Button type=\"submit\">생성하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport { useCallback, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\nimport React from 'react';\r\nimport { backUrl } from '@utils/config';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\r\n}\r\nconst InviteWorkspaceModal: VFC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser>(`/api/users`, fetcher);\r\n  const { mutate: memberMutate } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then(() => {\r\n          memberMutate();\r\n          setShowInviteWorkspaceModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [workspace, newMember],\r\n  );\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteWorkspaceModal;\r\n","import { IUser } from '@typings/db';\r\nimport { backUrl } from '@utils/config';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { useEffect, VFC } from 'react';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  member: IUser;\r\n  isOnline: boolean;\r\n}\r\n\r\nconst EachDM: VFC<Props> = ({ member, isOnline }) => {\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n  const location = useLocation();\r\n  const { data: userData } = useSWR<IUser>(`/api/users`, fetcher, {\r\n    dedupingInterval: 2000,\r\n  });\r\n  const date = localStorage.getItem(`${workspace}-${member.id}`) || 0;\r\n  const { data: count, mutate: mutateCount } = useSWR<number>(\r\n    userData ? `/api/workspaces/${workspace}/dms/${member.id}/unread?after=${date}` : null,\r\n    fetcher,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === `/workspace/${workspace}/dm/${member.id}`) {\r\n      mutateCount();\r\n    }\r\n  }, [mutateCount, location.pathname, workspace, member]);\r\n\r\n  return (\r\n    <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\r\n      <i\r\n        className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\r\n          isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\r\n        }`}\r\n        aria-hidden=\"true\"\r\n        data-qa=\"presence_indicator\"\r\n        data-qa-presence-self=\"false\"\r\n        data-qa-presence-active=\"false\"\r\n        data-qa-presence-dnd=\"false\"\r\n      />\r\n      <span className={count && count > 0 ? 'bold' : undefined}>{member.nickname}</span>\r\n      {member.id === userData?.id && <span> (나)</span>}\r\n      {(count && count > 0 && <span className=\"count\">{count}</span>) || null}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default EachDM;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\r\n  background: transparent;\r\n  border: none;\r\n  width: 26px;\r\n  height: 26px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  ${({ collapse }) =>\r\n    collapse &&\r\n    `\r\n    & i {\r\n      transform: none;\r\n    }\r\n  `};\r\n`;\r\n","import EachDM from '@components/EachDM';\r\nimport useSocket from '@hooks/useSocket';\r\nimport { IDM, IUser, IUserWithOnline } from '@typings/db';\r\nimport { backUrl } from '@utils/config';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\nimport { CollapseButton } from './style';\r\n\r\nconst DMList: FC = () => {\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n  const { data: userData } = useSWR<IUser>(`/api/users`, fetcher, { dedupingInterval: 2000 });\r\n\r\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const [onlineList, setOnlineList] = useState<number[]>([]);\r\n  const [socket] = useSocket(workspace);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOnlineList([]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onlineList', (data: number[]) => {\r\n      setOnlineList(data);\r\n    });\r\n    return () => {\r\n      socket?.off('onlineList');\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel-sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon-inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Direct Message</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          memberData?.map((member) => {\r\n            const isOnline = onlineList.includes(member.id);\r\n            return <EachDM key={member.id} member={member} isOnline={isOnline} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DMList;\r\n","import { IChannel, IUser } from '@typings/db';\r\nimport { backUrl } from '@utils/config';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { useEffect, VFC } from 'react';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  channel: IChannel;\r\n}\r\n\r\nconst EachChannel: VFC<Props> = ({ channel }) => {\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n  const location = useLocation();\r\n  const { data: userData } = useSWR<IUser>(`/api/users`, fetcher, { dedupingInterval: 2000 });\r\n  const date = localStorage.getItem(`${workspace}-${channel.name}`) || 0;\r\n  const { data: count, mutate: mutateCount } = useSWR<number>(\r\n    userData ? `/api/workspaces/${workspace}/channels/${channel.name}/unreads?after=${date}` : null,\r\n    fetcher,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === `/workspace/${workspace}/channel/${channel.name}`) {\r\n      mutateCount(0);\r\n    }\r\n  }, [mutateCount, location.pathname, workspace, channel]);\r\n\r\n  return (\r\n    <NavLink key={channel.name} activeClassName=\"selected\" to={`/workspace/${workspace}/channel/${channel.name}`}>\r\n      <span className={count !== undefined && count > 0 ? 'bold' : undefined}># {channel.name}</span>\r\n      {count !== undefined && count > 0 && <span className=\"count\">{count}</span>}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default EachChannel;\r\n","import { CollapseButton } from '@components/DMList/style';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\nimport EachChannel from '@components/EachChannel';\r\nimport { backUrl } from '@utils/config';\r\n\r\nconst ChannelList: FC = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const { data: userData } = useSWR<IUser>(`/api/users`, fetcher, { dedupingInterval: 2000 });\r\n  const { data: ChannelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Channels</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          ChannelData?.map((channel) => {\r\n            return <EachChannel key={channel.id} channel={channel} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n","import fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useState, VFC } from 'react';\r\nimport { Redirect, Route, Switch, useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\nimport {\r\n  Channels,\r\n  Header,\r\n  ProfileImg,\r\n  RightMenu,\r\n  WorkspaceWrapper,\r\n  Workspaces,\r\n  Chats,\r\n  WorkspaceName,\r\n  MenuScroll,\r\n  ProfileModal,\r\n  LogOutButton,\r\n  WorkspaceButton,\r\n  AddButton,\r\n  WorkspaceModal,\r\n} from './styles';\r\nimport gravatar from 'gravatar';\r\nimport loadable from '@loadable/component';\r\nimport Menu from '@components/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport useInput from '@hooks/useInput';\r\nimport Modal from '@components/Modal';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CreateChannelModal from '@components/CreateChannelModal';\r\nimport InviteWorkspacemodal from '@components/InviteWorkspaceModal';\r\nimport DMList from '@components/DMList';\r\nimport ChannelList from '@components/ChannelList';\r\nimport useSocket from '@hooks/useSocket';\r\nimport { backUrl } from '@utils/config';\r\n\r\nconst Channel = loadable(() => import('@pages/Channel'));\r\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\r\n\r\nconst Workspace: VFC = () => {\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\r\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\r\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\r\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\r\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\r\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\r\n\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n\r\n  const { data: userData, mutate } = useSWR<IUser | false>(`/api/users`, fetcher, {\r\n    dedupingInterval: 2000,\r\n  });\r\n  const { data: ChannelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n  const [socket, disconnect] = useSocket(workspace);\r\n\r\n  useEffect(() => {\r\n    if (ChannelData && userData && socket) {\r\n      socket.emit('login', { id: userData.id, channels: ChannelData.map((v) => v.id) });\r\n    }\r\n  }, [socket, ChannelData, userData]);\r\n\r\n  const onLogout = useCallback(() => {\r\n    axios\r\n      .post(`/api/users/logout`, null, {\r\n        withCredentials: true,\r\n      })\r\n      .then(() => {\r\n        mutate(false, false);\r\n      });\r\n  }, [mutate]);\r\n\r\n  const onClickUserProfile = useCallback(() => {\r\n    setShowUserMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  const onCloseUserProfile = useCallback((e) => {\r\n    e.stopPropagation();\r\n    setShowUserMenu(false);\r\n  }, []);\r\n\r\n  const onClickCreateWorkspace = useCallback(() => {\r\n    setShowCreateWorkspaceModal(true);\r\n  }, []);\r\n\r\n  const onCreateWorkspace = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newWorkspace || !newWorkspace.trim()) return;\r\n      if (!newUrl || !newUrl.trim()) return;\r\n      axios\r\n        .post(\r\n          `/api/workspaces`,\r\n          {\r\n            workspace: newWorkspace,\r\n            url: newUrl,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then(() => {\r\n          mutate();\r\n          setShowCreateWorkspaceModal(false);\r\n          setNewWorkspace('');\r\n          setNewUrl('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newWorkspace, newUrl],\r\n  );\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowCreateWorkspaceModal(false);\r\n    setShowCreateChannelModal(false);\r\n    setShowInviteWorkspaceModal(false);\r\n  }, []);\r\n\r\n  const onClickAddChannel = useCallback(() => {\r\n    setShowCreateChannelModal(true);\r\n  }, []);\r\n\r\n  const onClickInviteWorkspace = useCallback(() => {\r\n    setShowInviteWorkspaceModal(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [workspace, disconnect]);\r\n\r\n  const toggleWorkspaceModal = useCallback(() => {\r\n    setShowWorkspaceModal((prev) => !prev);\r\n  }, []);\r\n  if (!userData) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <RightMenu>\r\n          <span onClick={onClickUserProfile}>\r\n            <ProfileImg\r\n              src={gravatar.url(userData.email, { s: '28px', d: 'retro' })}\r\n              alt={userData.nickname}\r\n            ></ProfileImg>\r\n            {showUserMenu && (\r\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onCloseUserProfile}>\r\n                <ProfileModal>\r\n                  <img src={gravatar.url(userData.email, { s: '36px', d: 'retro' })} alt={userData.nickname} />\r\n                  <div>\r\n                    <span id=\"profile-name\">{userData.nickname}</span>\r\n                    <span id=\"profile-active\">Active</span>\r\n                  </div>\r\n                </ProfileModal>\r\n                <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\r\n              </Menu>\r\n            )}\r\n          </span>\r\n        </RightMenu>\r\n      </Header>\r\n      <WorkspaceWrapper>\r\n        <Workspaces>\r\n          {userData?.Workspaces.map((ws) => {\r\n            return (\r\n              <Link key={ws.id} to={`/workspace/${123}/channel/일반`}>\r\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\r\n              </Link>\r\n            );\r\n          })}\r\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\r\n        </Workspaces>\r\n        <Channels>\r\n          <WorkspaceName onClick={toggleWorkspaceModal}>Sleact</WorkspaceName>\r\n          <MenuScroll>\r\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\r\n              <WorkspaceModal>\r\n                <h2>Sleact</h2>\r\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\r\n                <button onClick={onClickAddChannel}>채널 만들기</button>\r\n                <button onClick={onLogout}>로그아웃</button>\r\n              </WorkspaceModal>\r\n            </Menu>\r\n            <ChannelList />\r\n            <DMList />\r\n          </MenuScroll>\r\n        </Channels>\r\n        <Chats>\r\n          <Switch>\r\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\r\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\r\n          </Switch>\r\n        </Chats>\r\n      </WorkspaceWrapper>\r\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\r\n        <form onSubmit={onCreateWorkspace}>\r\n          <Label id=\"workspace-label\">\r\n            <span>워크스페이스 이름</span>\r\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\r\n          </Label>\r\n          <Label id=\"workspace-url-label\">\r\n            <span>워크스페이스 url</span>\r\n            <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\r\n          </Label>\r\n          <Button type=\"submit\">생성하기</Button>\r\n        </form>\r\n      </Modal>\r\n      <CreateChannelModal\r\n        show={showCreateChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowCreateChannelModal={setShowCreateChannelModal}\r\n      />\r\n      <InviteWorkspacemodal\r\n        show={showInviteWorkspaceModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\r\n      />\r\n      <ToastContainer position=\"bottom-center\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","export const backUrl = 'http://3.38.95.51';\r\n"],"names":["CreateModal","CloseModalButton","show","children","onCloseModal","stopPropagation","useCallback","e","onClick","sockets","workspace","disconnect","io","backUrl","transports","undefined","RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","CreateMenu","Menu","style","closeButton","defaultProps","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","useInput","channel","useParams","data","userData","error","mutate","userMutate","useSWR","fetcher","dedupingInterval","channelData","channelMutate","onCreateChannel","preventDefault","axios","name","withCredentials","then","catch","console","dir","toast","response","position","Modal","onSubmit","id","value","onChange","type","setShowInviteWorkspaceModal","newMember","onChangeNewMember","setNewMember","memberMutate","onInviteMember","trim","email","member","isOnline","location","useLocation","date","localStorage","getItem","count","mutateCount","useEffect","pathname","key","activeClassName","to","className","nickname","CollapseButton","collapse","memberData","channelCollapse","setChannelCollapse","useState","onlineList","setOnlineList","socket","useSocket","toggleChannelCollapse","prev","on","off","map","includes","ChannelData","Channel","loadable","DirectMessage","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","newUrl","onChangeNewUrl","setNewUrl","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","showInviteWorkspaceModal","emit","channels","v","onLogout","onClickUserProfile","onCloseUserProfile","onClickCreateWorkspace","onCreateWorkspace","url","onClickAddChannel","onClickInviteWorkspace","toggleWorkspaceModal","src","gravatar","s","d","alt","right","top","ws","slice","toUpperCase","left","path","component"],"sourceRoot":""}