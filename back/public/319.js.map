{"version":3,"file":"319.js","mappings":"uMA0HA,UA/Ge,KACb,MAAM,KAAEA,EAAF,MAAQC,EAAR,OAAeC,IAAWC,EAAAA,EAAAA,IAAQ,aAAaC,EAAAA,IAE9CC,EAAOC,IAAiBC,EAAAA,EAAAA,GAAS,KACjCC,EAAUC,IAAoBF,EAAAA,EAAAA,GAAS,KACvCG,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAeC,IAAoBJ,EAAAA,EAAAA,WAAS,IAC5CK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,KACxCO,EAAeC,IAAoBR,EAAAA,EAAAA,WAAS,GAE7CS,GAAmBC,EAAAA,EAAAA,cACtBC,IACCZ,EAAYY,EAAEC,OAAOC,OACrBT,EAAiBO,EAAEC,OAAOC,QAAUZ,KAEtC,CAACA,IAGGa,GAAwBJ,EAAAA,EAAAA,cAC3BC,IACCT,EAAiBS,EAAEC,OAAOC,OAC1BT,EAAiBO,EAAEC,OAAOC,QAAUf,KAEtC,CAACA,IAGGiB,GAAWL,EAAAA,EAAAA,cACdC,IACCA,EAAEK,iBACGb,IACHc,QAAQC,IAAI,UACZZ,EAAe,IACfE,GAAiB,GAEjBW,IAAAA,KACS,aAAa,CAClB1B,MAAAA,EACAG,SAAAA,EACAE,SAAAA,IAEDsB,MAAMC,IACLJ,QAAQC,IAAIG,GACZb,GAAiB,MAElBc,OAAOjC,IACN4B,QAAQC,IAAI7B,EAAMgC,UAClBf,EAAejB,EAAMgC,SAASjC,SAE/BmC,SAAQ,YAGf,CAAC9B,EAAOG,EAAUE,EAAUG,EAAeE,IAG7C,YAAaqB,IAATpC,EACK,qCAGLA,EACK,gBAAC,KAAD,CAAUqC,GAAG,iCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMX,SAAUA,GACd,gBAAC,KAAD,CAAOW,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQb,MAAOpB,EAAOmC,SAAUlC,MAG3D,gBAAC,KAAD,CAAOgC,GAAG,kBACR,mCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,OAAOD,GAAG,WAAWb,MAAOjB,EAAUgC,SAAU/B,MAGhE,gBAAC,KAAD,CAAO6B,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWG,KAAK,WAAWhB,MAAOf,EAAU8B,SAAUnB,MAGpF,gBAAC,KAAD,CAAOiB,GAAG,wBACR,uCACA,2BACE,gBAAC,KAAD,CACEC,KAAK,WACLD,GAAG,iBACHG,KAAK,iBACLhB,MAAOZ,EACP2B,SAAUd,KAGbX,GAAiB,gBAAC,KAAD,0BAChBP,GAAY,gBAAC,KAAD,qBACbS,GAAe,gBAAC,KAAD,KAAQA,GACvBE,GAAiB,gBAAC,KAAD,6BAEpB,gBAAC,KAAD,CAAQoB,KAAK,UAAb,SAEF,gBAAC,KAAD,mBAEE,gBAAC,KAAD,CAAMF,GAAG,UAAT","sources":["webpack://front/./pages/SignUp/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Form, Label, Input, LinkContainer, Button, Header, Error, Success } from './styles';\r\nimport { useState, useCallback } from 'react';\r\nimport useInput from '@hooks/useInput';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\nimport { Redirect } from 'react-router';\r\nimport fetcher from '@utils/fetcher';\r\nimport { backUrl } from '@utils/config';\r\n\r\nconst SignUp = () => {\r\n  const { data, error, mutate } = useSWR(`/api/users`, fetcher);\r\n\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const [mismatchError, setMismatchError] = useState(false);\r\n  const [signUpError, setSignUpError] = useState('');\r\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\r\n\r\n  const onChangePassword = useCallback(\r\n    (e) => {\r\n      setPassword(e.target.value);\r\n      setMismatchError(e.target.value !== passwordCheck);\r\n    },\r\n    [passwordCheck],\r\n  );\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    (e) => {\r\n      setPasswordCheck(e.target.value);\r\n      setMismatchError(e.target.value !== password);\r\n    },\r\n    [password],\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!mismatchError) {\r\n        console.log('회원가입하기');\r\n        setSignUpError('');\r\n        setSignUpSuccess(false);\r\n\r\n        axios\r\n          .post(`/api/users`, {\r\n            email,\r\n            nickname,\r\n            password,\r\n          })\r\n          .then((response: any) => {\r\n            console.log(response);\r\n            setSignUpSuccess(true);\r\n          })\r\n          .catch((error: any) => {\r\n            console.log(error.response);\r\n            setSignUpError(error.response.data);\r\n          })\r\n          .finally(() => {});\r\n      }\r\n    },\r\n    [email, nickname, password, passwordCheck, mismatchError],\r\n  );\r\n\r\n  if (data === undefined) {\r\n    return <div>로딩중...</div>;\r\n  }\r\n\r\n  if (data) {\r\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\r\n  }\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <Header>Sleact</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label id=\"email-label\">\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"nickname-label\">\r\n          <span>닉네임</span>\r\n          <div>\r\n            <Input type=\"text\" id=\"nickname\" value={nickname} onChange={onChangeNickname} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-label\">\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-check-label\">\r\n          <span>비밀번호 확인</span>\r\n          <div>\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password-check\"\r\n              name=\"password-check\"\r\n              value={passwordCheck}\r\n              onChange={onChangePasswordCheck}\r\n            />\r\n          </div>\r\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\r\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\r\n          {signUpError && <Error>{signUpError}</Error>}\r\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\r\n        </Label>\r\n        <Button type=\"submit\">회원가입</Button>\r\n      </Form>\r\n      <LinkContainer>\r\n        이미 회원이신가요?&nbsp;\r\n        <Link to=\"/login\">로그인 하러가기</Link>\r\n      </LinkContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"names":["data","error","mutate","useSWR","fetcher","email","onChangeEmail","useInput","nickname","onChangeNickname","password","setPassword","useState","passwordCheck","setPasswordCheck","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","console","log","axios","then","response","catch","finally","undefined","to","id","type","onChange","name"],"sourceRoot":""}