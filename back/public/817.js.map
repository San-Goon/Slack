{"version":3,"file":"817.js","mappings":"6LAqEA,UA5Dc,KACZ,MAAQA,KAAMC,EAAR,MAAkBC,EAAlB,OAAyBC,IAAWC,EAAAA,EAAAA,IAAQ,aAAaC,EAAAA,IACxDC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAOC,IAAiBC,EAAAA,EAAAA,GAAS,KACjCC,EAAUC,IAAoBF,EAAAA,EAAAA,GAAS,IACxCG,GAAWC,EAAAA,EAAAA,cACdC,IACCA,EAAEC,iBACFV,GAAc,GACdW,IAAAA,KAEK,mBACD,CAAET,MAAAA,EAAOG,SAAAA,GACT,CACEO,iBAAiB,IAGpBC,MAAK,KACJjB,OAEDkB,OAAOnB,IAAU,QAChBK,EAA6C,OAA/B,UAAAL,EAAMoB,gBAAN,mBAAgBtB,YAAhB,eAAsBuB,YAG1C,CAACd,EAAOG,EAAUT,IAIpB,OADAqB,QAAQC,IAAIvB,EAAOD,IACdC,GAASD,GACZuB,QAAQC,IAAI,OAAQxB,GACb,gBAAC,KAAD,CAAUyB,GAAG,kCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMb,SAAUA,GACd,gBAAC,KAAD,CAAOa,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQC,MAAOrB,EAAOsB,SAAUrB,MAGxE,gBAAC,KAAD,CAAOiB,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWC,MAAOlB,EAAUmB,SAAUlB,KAEjFP,GAAc,gBAAC,KAAD,kCAEjB,gBAAC,KAAD,CAAQsB,KAAK,UAAb,QAEF,gBAAC,KAAD,sBAEE,qBAAGI,KAAK,WAAR","sources":["webpack://front/./pages/Login/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\r\nimport { Button, Error, Form, Header, Input, Label, LinkContainer } from '@pages/SignUp/styles';\r\nimport { backUrl } from '@utils/config';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\nconst LogIn = () => {\r\n  const { data: userData, error, mutate } = useSWR(`/api/users`, fetcher);\r\n  const [logInError, setLogInError] = useState(false);\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setLogInError(false);\r\n      axios\r\n        .post(\r\n          `/api/users/login`,\r\n          { email, password },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then(() => {\r\n          mutate();\r\n        })\r\n        .catch((error) => {\r\n          setLogInError(error.response?.data?.code === 401);\r\n        });\r\n    },\r\n    [email, password, mutate],\r\n  );\r\n\r\n  console.log(error, userData);\r\n  if (!error && userData) {\r\n    console.log('로그인됨', userData);\r\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\r\n  }\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <Header>Sleact</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label id=\"email-label\">\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-label\">\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\r\n        </Label>\r\n        <Button type=\"submit\">로그인</Button>\r\n      </Form>\r\n      <LinkContainer>\r\n        아직 회원이 아니신가요?&nbsp;\r\n        <a href=\"/signup\">회원가입 하러가기</a>\r\n      </LinkContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n"],"names":["data","userData","error","mutate","useSWR","fetcher","logInError","setLogInError","useState","email","onChangeEmail","useInput","password","onChangePassword","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","catch","response","code","console","log","to","id","type","name","value","onChange","href"],"sourceRoot":""}